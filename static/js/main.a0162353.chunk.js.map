{"version":3,"sources":["components/navbar/index.js","components/footer/index.js","pages/aboutMe.js","pages/projects.js","pages/contact.js","App.js","serviceWorker.js","index.js"],"names":["FullWidthGrid","className","Grid","container","spacing","item","xs","sm","href","color","StickyFooter","target","AboutMe","Jumbotron","fluid","Container","useStyles","makeStyles","root","maxWidth","media","height","MediaCard","classes","Card","CardActionArea","CardMedia","image","title","CardContent","Typography","gutterBottom","variant","component","CardActions","Button","size","ContactMe","props","Form","FormGroup","Label","for","Input","type","name","id","placeholder","multiple","FormText","tag","check","disabled","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a0162353.chunk.js","sourcesContent":["import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport './index.css';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nexport default function FullWidthGrid() {\r\n\treturn (\r\n\t\t<div className=\"header\">\r\n\t\t\t<Grid container spacing={0}>\r\n\t\t\t\t<Grid item xs={12} sm={4}>\r\n\t\t\t\t\t<div container>\r\n\t\t\t\t\t\t<a href=\"/\" color=\"inherit\">\r\n\t\t\t\t\t\t\t<HomeIcon />\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} sm={4} />\r\n\t\t\t\t<Grid item xs={12} sm={4}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<a href=\"/projects\" color=\"inherit\">\r\n\t\t\t\t\t\t\tprojects\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport './index.css';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport ResumeIcon from '@material-ui/icons/Description';\r\n\r\nfunction StickyFooter() {\r\n\treturn (\r\n\t\t<div className=\"footer\">\r\n\t\t\t<Grid container spacing={0}>\r\n\t\t\t\t<Grid item xs={12} sm={4}>\r\n\t\t\t\t\t<div container>\r\n\t\t\t\t\t\t<a href=\"/aboutme\">about me</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} sm={4}>\r\n\t\t\t\t\t<div container>\r\n\t\t\t\t\t\t<a href=\"https://github.com/rogercerpa\" target=\"black\">\r\n\t\t\t\t\t\t\t<GitHubIcon />\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t<a href=\"https://www.linkedin.com/in/roger-cerpa/\" target=\"black\">\r\n\t\t\t\t\t\t\t<LinkedInIcon />\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t<a href=\"https://www.instagram.com/roger.cerpa/\" target=\"black\">\r\n\t\t\t\t\t\t\t<InstagramIcon />\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t{/* <a href=\"\" target=\"black\">\r\n\t\t\t\t\t\t\t<ResumeIcon />\r\n\t\t\t\t\t\t</a> */}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} sm={4}>\r\n\t\t\t\t\t<div container>\r\n\t\t\t\t\t\t<a href=\"/contact\">contact</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default StickyFooter;\r\n","import React from 'react';\r\nimport { Jumbotron, Container } from 'reactstrap';\r\n\r\nconst AboutMe = () => {\r\n\treturn (\r\n\t\t<Jumbotron fluid>\r\n\t\t\t<Container fluid>\r\n\t\t\t\t<h1 className=\"display-3\">Fluid jumbotron</h1>\r\n\t\t\t\t<p className=\"lead\">\r\n\t\t\t\t\tThis is a modified jumbotron that occupies the entire horizontal space\r\n\t\t\t\t\tof its parent.\r\n\t\t\t\t</p>\r\n\t\t\t</Container>\r\n\t\t</Jumbotron>\r\n\t);\r\n};\r\n\r\nexport default AboutMe;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n\troot  : {\r\n\t\tmaxWidth : 345\r\n\t},\r\n\tmedia : {\r\n\t\theight : 140\r\n\t}\r\n});\r\n\r\nexport default function MediaCard() {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<Card className={classes.root}>\r\n\t\t\t<CardActionArea>\r\n\t\t\t\t<CardMedia\r\n\t\t\t\t\tclassName={classes.media}\r\n\t\t\t\t\timage=\"/static/images/cards/contemplative-reptile.jpg\"\r\n\t\t\t\t\ttitle=\"Contemplative Reptile\"\r\n\t\t\t\t/>\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n\t\t\t\t\t\tLizard\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n\t\t\t\t\t\tLizards are a widespread group of squamate reptiles, with over 6,000\r\n\t\t\t\t\t\tspecies, ranging across all continents except Antarctica\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</CardContent>\r\n\t\t\t</CardActionArea>\r\n\t\t\t<CardActions>\r\n\t\t\t\t<Button size=\"small\" color=\"primary\">\r\n\t\t\t\t\tShare\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button size=\"small\" color=\"primary\">\r\n\t\t\t\t\tLearn More\r\n\t\t\t\t</Button>\r\n\t\t\t</CardActions>\r\n\t\t</Card>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\n\r\nconst ContactMe = (props) => {\r\n\treturn (\r\n\t\t<Form>\r\n\t\t\t<FormGroup>\r\n\t\t\t\t<Label for=\"exampleEmail\">Email</Label>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\tid=\"exampleEmail\"\r\n\t\t\t\t\tplaceholder=\"with a placeholder\"\r\n\t\t\t\t/>\r\n\t\t\t</FormGroup>\r\n\t\t\t<FormGroup>\r\n\t\t\t\t<Label for=\"examplePassword\">Password</Label>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\tid=\"examplePassword\"\r\n\t\t\t\t\tplaceholder=\"password placeholder\"\r\n\t\t\t\t/>\r\n\t\t\t</FormGroup>\r\n\t\t\t<FormGroup>\r\n\t\t\t\t<Label for=\"exampleSelect\">Select</Label>\r\n\t\t\t\t<Input type=\"select\" name=\"select\" id=\"exampleSelect\">\r\n\t\t\t\t\t<option>1</option>\r\n\t\t\t\t\t<option>2</option>\r\n\t\t\t\t\t<option>3</option>\r\n\t\t\t\t\t<option>4</option>\r\n\t\t\t\t\t<option>5</option>\r\n\t\t\t\t</Input>\r\n\t\t\t</FormGroup>\r\n\t\t\t<FormGroup>\r\n\t\t\t\t<Label for=\"exampleSelectMulti\">Select Multiple</Label>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype=\"select\"\r\n\t\t\t\t\tname=\"selectMulti\"\r\n\t\t\t\t\tid=\"exampleSelectMulti\"\r\n\t\t\t\t\tmultiple\r\n\t\t\t\t>\r\n\t\t\t\t\t<option>1</option>\r\n\t\t\t\t\t<option>2</option>\r\n\t\t\t\t\t<option>3</option>\r\n\t\t\t\t\t<option>4</option>\r\n\t\t\t\t\t<option>5</option>\r\n\t\t\t\t</Input>\r\n\t\t\t</FormGroup>\r\n\t\t\t<FormGroup>\r\n\t\t\t\t<Label for=\"exampleText\">Text Area</Label>\r\n\t\t\t\t<Input type=\"textarea\" name=\"text\" id=\"exampleText\" />\r\n\t\t\t</FormGroup>\r\n\t\t\t<FormGroup>\r\n\t\t\t\t<Label for=\"exampleFile\">File</Label>\r\n\t\t\t\t<Input type=\"file\" name=\"file\" id=\"exampleFile\" />\r\n\t\t\t\t<FormText color=\"muted\">\r\n\t\t\t\t\tThis is some placeholder block-level help text for the above input.\r\n\t\t\t\t\tIt's a bit lighter and easily wraps to a new line.\r\n\t\t\t\t</FormText>\r\n\t\t\t</FormGroup>\r\n\t\t\t<FormGroup tag=\"fieldset\">\r\n\t\t\t\t<legend>Radio Buttons</legend>\r\n\t\t\t\t<FormGroup check>\r\n\t\t\t\t\t<Label check>\r\n\t\t\t\t\t\t<Input type=\"radio\" name=\"radio1\" /> Option one is this and that—be\r\n\t\t\t\t\t\tsure to include why it's great\r\n\t\t\t\t\t</Label>\r\n\t\t\t\t</FormGroup>\r\n\t\t\t\t<FormGroup check>\r\n\t\t\t\t\t<Label check>\r\n\t\t\t\t\t\t<Input type=\"radio\" name=\"radio1\" /> Option two can be something\r\n\t\t\t\t\t\telse and selecting it will deselect option one\r\n\t\t\t\t\t</Label>\r\n\t\t\t\t</FormGroup>\r\n\t\t\t\t<FormGroup check disabled>\r\n\t\t\t\t\t<Label check>\r\n\t\t\t\t\t\t<Input type=\"radio\" name=\"radio1\" disabled /> Option three is\r\n\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t</Label>\r\n\t\t\t\t</FormGroup>\r\n\t\t\t</FormGroup>\r\n\t\t\t<FormGroup check>\r\n\t\t\t\t<Label check>\r\n\t\t\t\t\t<Input type=\"checkbox\" /> Check me out\r\n\t\t\t\t</Label>\r\n\t\t\t</FormGroup>\r\n\t\t\t<Button>Submit</Button>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default ContactMe;\r\n","import React from 'react';\nimport './App.css';\nimport NavBar from './components/navbar/index';\nimport Footer from './components/footer/index';\nimport AboutMe from './pages/aboutMe';\nimport Projects from './pages/projects';\nimport Contact from './pages/contact';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nfunction App() {\n\treturn (\n\t\t<Router>\n\t\t\t<NavBar />\n\n\t\t\t<Switch>\n\t\t\t\t<Route exact path={[ '/' ]}>\n\t\t\t\t\t<AboutMe />\n\t\t\t\t</Route>\n\t\t\t\t<Route exact path={[ '/projects' ]}>\n\t\t\t\t\t<Projects />\n\t\t\t\t</Route>\n\t\t\t\t<Route exact path={[ '/contact' ]}>\n\t\t\t\t\t<Contact />\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\n\t\t\t<Footer />\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}